/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Form.java
 *
 * Created on 09-oct-2010, 15:45:02
 */

package bwinterfas;


import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;


import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author FrankO
 */
public class Form extends javax.swing.JFrame {
    public int aux=0;
    public int aux1=0;
    public double dif=0.0; 
    public int time_Final=0;
    /** Creates new form Form */
    public Form() {
        setLocationRelativeTo(null);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Elejia el archivo a comprimir"));

        jButton1.setText("Examinar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Elija el archivo a guardar");

        jButton2.setText("Examinar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap(26, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton3.setText("Comprimir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Descomprimir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Mostrar Archvio a Comprimir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Mostrar Archvio Descomprimir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addGap(31, 31, 31)
                                        .addComponent(jButton4)))))
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(26, 26, 26)
                        .addComponent(jButton6)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser f=new JFileChooser();
       f.setDialogTitle("Fichero que se desea abrir");
       f.setFileSelectionMode(JFileChooser.FILES_ONLY);//Tipo de busqueda
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos txt...", "txt");
        f.setFileFilter(filter);//Extenciones
       
        int returnVal=f.showOpenDialog(null);
       File file=f.getSelectedFile();
       
      
       if(returnVal == JFileChooser.APPROVE_OPTION){
           String path=file.getPath();
           jTextField1.setText(path);
            nombre=file.getName();//ingresamos el nomngre del archivo
            System.out.println("******************"+nombre);
            aux=0;
       }else{
           System.out.println("No leyo un archivo...");
       }
 

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(!new File(this.jTextField1.getText()).exists() || !new File(this.jTextField2.getText()).exists())
        {
            JOptionPane.showMessageDialog(null, "Lo sentimos, el archivo especificado no existe.", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            
            return;
        }else{
            try {
                long inicio = System.nanoTime();
                procesar();
                long fin = System.nanoTime();
                dif = (double)(fin - inicio)*1.0e-9;
                
                int tiempo=(int) dif;
                //System.out.println("Tiempo *** "+dif+"     "+tiempo);
                time_Final=tiempo*100;
                aux=1;
                
                
            } catch (IOException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(!new File(this.jTextField1.getText()).exists() || !new File(this.jTextField2.getText()).exists())
        {
            JOptionPane.showMessageDialog(null, "Lo sentimos, el archivo especificado no existe.", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            
            return;
        }else if(aux==1){
            Lectura_Archivo lector = new Lectura_Archivo();
            String text ;
            text = lector.leerArchivo(jTextField1.getText());
            jTextArea1.setText("");//para vaciar el text area
            try {
                Thread.sleep(time_Final);
            } catch (InterruptedException ex) {
                //Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Texto Descompimiendo:\n"+text);
            jTextArea1.append("Texto Descompimiendo:\n"+text);
            aux=0;
        }else{
            JOptionPane.showMessageDialog(null, "Lo sentimos, Tiene que comprimir el archivo primero.", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            return; 
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(!new File(this.jTextField2.getText()).exists())
        {
            JOptionPane.showMessageDialog(null, "Lo sentimos, el archivo especificado no existe.", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        else{
            try {
                if(aux==1){
                    mostrar1();
                }else{
                     JOptionPane.showMessageDialog(null, "Lo sentimos, Tiene que comprimir el archivo primero.", "Error al procesar", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
            } catch (IOException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        if(!new File(this.jTextField1.getText()).exists())
        {
            JOptionPane.showMessageDialog(null, "Lo sentimos, el archivo especificado no existe.", "Error al procesar", JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        else{
            try {
            
                mostrar();
            } catch (IOException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser f=new JFileChooser();
       f.setDialogTitle("Fichero que se desea abrir");
       
       f.setFileSelectionMode(JFileChooser.FILES_ONLY);//Tipo de busqueda
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos txt...", "txt");
        f.setFileFilter(filter);//Extenciones
        
        int returnVal=f.showOpenDialog(null);

       File file=f.getSelectedFile();
       
      
       if(returnVal == JFileChooser.APPROVE_OPTION){
           String path=file.getPath();
           jTextField2.setText(path);
            nombre=file.getName();//ingresamos el nomngre del archivo
            System.out.println("******************"+nombre);
            aux1=1;
       }else{
           System.out.println("No leyo un archivo...");
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    public static void mostrar() throws IOException{
        String url;
        url = jTextField1.getText();
        ProcessBuilder p = new ProcessBuilder();
        p.command("cmd.exe", "/c", url);
        p.start();
    }
    
    public static void mostrar1() throws IOException{
        
        String url;
        url = jTextField2.getText();
        ProcessBuilder p = new ProcessBuilder();
        p.command("cmd.exe", "/c", url);
        p.start();
    }
    public String nombre = null;
    
    public static void procesar() throws IOException{
        //  Change the text inside the quotes if you want to test the program on
  //  a different message.

      Lectura_Archivo lector = new Lectura_Archivo();
      String test;

      File arch = new File(jTextField1.getText());

      String nombre_archivo=arch.getName();
          //System.out.println("nombre ::::::::::::  "+nombre_archivo);
      String text ;
      text = lector.leerArchivo(jTextField1.getText());//te lee el archvi por medio del get name
      jTextArea1.setText("");//para vaciar el text area
      jTextArea1.append("**** TEXTO A COMPRIMIR ****\n"+text);// mostramos el texto a comprimir en el archvio
      jTextArea1.append("\nTamaño del texto a comprimir: "+text.length());
      System.out.println("**** TEXTO A COMPRIMIR ****\n"+text);

      char cad; 
  //    cad = text.charAt(text.length()-1); 




      final int SIZE = text.length();

      String[] rotations = new String[SIZE];
      String result = "";
      String compressed = "";

      System.out.println("Rotaciones: "+SIZE );
      System.out.println();

        // First generate all rotations
      System.out.println("****  Todas las rotaciones ****\n");
      generateRotations(text, rotations);
      //printStringArray(rotations, SIZE);
        System.out.println("");
    // Next sort those strings  
    System.out.println("**** Ordenar filas ****\n");
      sortStrings(rotations, SIZE);
      //printStringArray(rotations, SIZE);

  // Finally take the last character of each sorted string to
  // get the Burrows-Wheeler transform
      result = lastChars(rotations, SIZE);
      System.out.println("\n***** SALIDA ****\n"+result);
       System.out.println();

       //aplicamos la transformacio inversa

       char[] letras = new char[result.length()]; 
       for (int i = 0; i < letras.length; i++) 
          letras[i] = result.charAt(i); 

      Arrays.sort(letras); 
      String rusultado = String.valueOf(letras);


  // Now you can compress the Burrows-Wheeler transform
  // and get a much compressed string even with no runs of
  // repeated letters in the original   
      compressed = runLengthEncode(rusultado);
      System.out.println("Texto Comprimido:\n"+compressed);
      jTextArea1.append("\n\nTexto Comprimido:\n"+compressed);// mostramos el texto comprimido
      escribir_archivo(compressed);
      System.out.println("Longitud comprimida: " + compressed.length());
      jTextArea1.append("\nLongitud comprimida: " + compressed.length()+"\n");
      System.out.println();
      //System.out.println("Texto Descompimiendo:\n"+text);
      //System.exit(0);
  }
    public static void escribir_archivo(String compressed) throws IOException{
        FileWriter fichero = null;
        PrintWriter pw = null;
        
        fichero = new FileWriter(jTextField2.getText());
        pw = new PrintWriter(fichero);

         //for (int i = 0; i < compressed.length(); i++)
        pw.write(compressed);
        fichero.close();       
        
    }
    public static String invertBWT( String bwt,String text,char cad ) {
        char[] last = bwt.toCharArray();
        char[] first = Arrays.copyOf(last,last.length);
        Arrays.sort(first);
        int[] subsFirst = new int[first.length];
        subsFirst[0] = 1;
        for(int i = 1; i < subsFirst.length; ++i) {
            if(first[i] == first[i-1]) {
                subsFirst[i] = subsFirst[i-1] + 1;
            }
            else {
                subsFirst[i] = 1;
            }
        }
        int[] subsLast = new int[first.length];
        int[] counts = new int[256];
        for(int i = 0; i < subsLast.length; ++i) {
            subsLast[i] = ++counts[last[i]];
        }
        String wip = "";
        char currL = cad;
        int currN = 0;
        for(int i = 0; i < last.length; ++i) {
            if(last[i] == cad) {
                currL = first[i];
                currN = subsFirst[i];
                wip += currL;
                break;
            }
        }
        while(currL != cad) {
            for(int i = 0; i < last.length; ++i) {
                if(last[i] == currL && subsLast[i] == currN) {
                    currL = first[i];
                    currN = subsFirst[i];
                    wip += currL;
                    break;
                }
            }
        }
        return text;
    }
    //RLE encode
    public static String runLengthEncode(String source){
     String result = "";
     int count = 1;
     char current = source.charAt(0);
     
     for(int i=1; i< source.length(); i++)
     {
        if (source.charAt(i)==current)
           count = count + 1;
        else
        {
            result = result + count + current;
            count = 1;
            current = source.charAt(i);
        }
     }
     result = result + count + current;
     
     return result;
 }
    
    // **********************************************
  // Generate all the rotations of a String, rotating one position at a time
 public static void generateRotations(String source, String[] s)
 {
     s[0] = source;
     
     for(int i=1; i< source.length(); i++)
     {
        s[i] = s[i-1].substring(1) + s[i-1].charAt(0);
     }
 }
 
  // **********************************************
  // Get each of the last characters of an array of Strings
 public static String lastChars(String[] s, int SIZE)
 {
     String result = "";
     
     for(int i=0; i< SIZE; i++)
     {
        result = result + s[i].charAt(SIZE-1);
     }
     
     return result;
 }
 
  // **********************************************
  // Sort an array of strings 
 public static void printStringArray(String[] a, int SIZE)
 {
     for(int i=0; i< SIZE; i++)
     {
        System.out.println(a[i]);
     }
     System.out.println();

 }

 
  // **********************************************
  // Sort an array of strings 
 public static void sortStrings(String[] a, int SIZE)
 {
     for(int pass=0; pass<= SIZE-2; pass++)
     {
       for(int i=0; i<= SIZE-pass-2; i++)
       {
           if (a[i].compareTo(a[i+1])>0)
               swap(a, i, i+1);
       }
     }
 }

  // **********************************************
  // Swap 2 given positions in an array of Strings 
  public static void swap(String[] a, int i, int j)
 {
    String t = a[i];
    a[i] = a[i+1];
    a[i+1] = t;
 }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
